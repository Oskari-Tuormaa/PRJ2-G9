/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

USER_TYPE("|kodelaes_sm_p_a|kodelaes_sm:U1|present_state")
{
	VALUES = "present_state.idle", "present_state.going_idle", "present_state.evaluating_code_1", "present_state.getting_code_2", "present_state.evaluating_code_2", "present_state.unlocked", "present_state.wrong_code", "present_state.blink_1", "present_state.blink_2", "present_state.blink_3", "present_state.blink_4", "present_state.blink_5", "present_state.blink_6", "present_state.permanently_locked";
}

SIGNAL("GPIO_0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("KEY[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("KEY[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("LEDG[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("LEDR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "LEDR";
}

SIGNAL("SW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("CLOCK_50")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("kodelaes_sm:U1|present_state")
{
	VALUE_TYPE = ENUM;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
	ENUM_NAME = "|kodelaes_sm_p_a|kodelaes_sm:U1|present_state";
}

SIGNAL("kodelaes_sm:U1|counter")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("kodelaes_sm:U1|counter[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

SIGNAL("kodelaes_sm:U1|counter[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "kodelaes_sm:U1|counter";
}

TRANSITION_LIST("GPIO_0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("KEY[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("KEY[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 6400.0;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 19200.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 7680.0;
		LEVEL 0 FOR 12800.0;
		LEVEL 1 FOR 38560.0;
	}
}

TRANSITION_LIST("LEDG[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("LEDR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("LEDR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11550.0;
		LEVEL 1 FOR 12120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 12060.0;
			LEVEL 1 FOR 12060.0;
		}
		LEVEL 0 FOR 3970.0;
	}
}

TRANSITION_LIST("LEDR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11550.0;
		LEVEL 1 FOR 12120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 12060.0;
			LEVEL 1 FOR 12060.0;
		}
		LEVEL 0 FOR 3970.0;
	}
}

TRANSITION_LIST("LEDR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 11550.0;
		LEVEL 1 FOR 12120.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 12060.0;
			LEVEL 1 FOR 12060.0;
		}
		LEVEL 0 FOR 3970.0;
	}
}

TRANSITION_LIST("LEDR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("LEDR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 11550.0;
		LEVEL 0 FOR 84480.0;
		LEVEL 1 FOR 3970.0;
	}
}

TRANSITION_LIST("SW[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3840.0;
		LEVEL 1 FOR 12800.0;
		LEVEL 0 FOR 83360.0;
	}
}

TRANSITION_LIST("SW[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23040.0;
		LEVEL 1 FOR 11520.0;
		LEVEL 0 FOR 65440.0;
	}
}

TRANSITION_LIST("SW[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5120.0;
		LEVEL 1 FOR 7680.0;
		LEVEL 0 FOR 87200.0;
	}
}

TRANSITION_LIST("SW[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 23040.0;
		LEVEL 1 FOR 11520.0;
		LEVEL 0 FOR 65440.0;
	}
}

TRANSITION_LIST("CLOCK_50")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1666;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 30.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|present_state")
{
	NODE
	{
		REPEAT = 1;
		LEVEL present_state.idle FOR 6450.0;
		LEVEL present_state.evaluating_code_1 FOR 5100.0;
		LEVEL present_state.wrong_code FOR 12120.0;
		LEVEL present_state.blink_1 FOR 12060.0;
		LEVEL present_state.blink_2 FOR 12060.0;
		LEVEL present_state.blink_3 FOR 12060.0;
		LEVEL present_state.blink_4 FOR 12060.0;
		LEVEL present_state.blink_5 FOR 12060.0;
		LEVEL present_state.blink_6 FOR 12060.0;
		LEVEL present_state.idle FOR 3970.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 19230.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 4380.0;
			LEVEL 0 FOR 7680.0;
		}
		LEVEL 1 FOR 4380.0;
		LEVEL 0 FOR 4030.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3810.0;
		LEVEL 1 FOR 2700.0;
		LEVEL 0 FOR 8880.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 3840.0;
			LEVEL 0 FOR 3840.0;
			LEVEL 1 FOR 540.0;
			LEVEL 0 FOR 3840.0;
		}
		LEVEL 1 FOR 190.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1890.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 1920.0;
		LEVEL 1 FOR 780.0;
		LEVEL 0 FOR 6960.0;
		NODE
		{
			REPEAT = 6;
			NODE
			{
				REPEAT = 2;
				LEVEL 1 FOR 1920.0;
				LEVEL 0 FOR 1920.0;
			}
			LEVEL 1 FOR 1920.0;
			LEVEL 0 FOR 2460.0;
		}
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1920.0;
			LEVEL 0 FOR 1920.0;
		}
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 2460.0;
		LEVEL 1 FOR 1920.0;
		LEVEL 0 FOR 190.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 930.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 6780.0;
		NODE
		{
			REPEAT = 6;
			NODE
			{
				REPEAT = 5;
				LEVEL 1 FOR 960.0;
				LEVEL 0 FOR 960.0;
			}
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 1500.0;
		}
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 960.0;
			LEVEL 0 FOR 960.0;
		}
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 1500.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 960.0;
		LEVEL 1 FOR 960.0;
		LEVEL 0 FOR 190.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 450.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 5520.0;
		NODE
		{
			REPEAT = 12;
			LEVEL 1 FOR 480.0;
			LEVEL 0 FOR 480.0;
		}
		NODE
		{
			REPEAT = 6;
			LEVEL 1 FOR 60.0;
			NODE
			{
				REPEAT = 12;
				LEVEL 0 FOR 480.0;
				LEVEL 1 FOR 480.0;
			}
			LEVEL 0 FOR 480.0;
		}
		LEVEL 1 FOR 60.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 480.0;
			LEVEL 1 FOR 480.0;
		}
		LEVEL 0 FOR 190.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.0;
		NODE
		{
			REPEAT = 13;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 5280.0;
		NODE
		{
			REPEAT = 6;
			NODE
			{
				REPEAT = 24;
				LEVEL 1 FOR 240.0;
				LEVEL 0 FOR 240.0;
			}
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 300.0;
		}
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 300.0;
		NODE
		{
			REPEAT = 7;
			LEVEL 1 FOR 240.0;
			LEVEL 0 FOR 240.0;
		}
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 190.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 90.0;
		NODE
		{
			REPEAT = 26;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 5220.0;
		NODE
		{
			REPEAT = 6;
			NODE
			{
				REPEAT = 49;
				LEVEL 1 FOR 120.0;
				LEVEL 0 FOR 120.0;
			}
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 180.0;
		}
		NODE
		{
			REPEAT = 49;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 180.0;
		NODE
		{
			REPEAT = 16;
			LEVEL 1 FOR 120.0;
			LEVEL 0 FOR 120.0;
		}
		LEVEL 1 FOR 70.0;
	}
}

TRANSITION_LIST("kodelaes_sm:U1|counter[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30.0;
		NODE
		{
			REPEAT = 53;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 5160.0;
		NODE
		{
			REPEAT = 6;
			NODE
			{
				REPEAT = 99;
				LEVEL 1 FOR 60.0;
				LEVEL 0 FOR 60.0;
			}
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 120.0;
		}
		NODE
		{
			REPEAT = 99;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 120.0;
		NODE
		{
			REPEAT = 33;
			LEVEL 1 FOR 60.0;
			LEVEL 0 FOR 60.0;
		}
		LEVEL 1 FOR 10.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "GPIO_0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KEY[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "KEY[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDG[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
	CHILDREN = 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 4;
}

DISPLAY_LINE
{
	CHANNEL = "SW";
	EXPAND_STATUS = EXPANDED;
	RADIX = Binary;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15;
}

DISPLAY_LINE
{
	CHANNEL = "SW[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "SW[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "SW[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "SW[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK_50";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|present_state";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
	CHILDREN = 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 18;
}

DISPLAY_LINE
{
	CHANNEL = "kodelaes_sm:U1|counter[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 18;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;

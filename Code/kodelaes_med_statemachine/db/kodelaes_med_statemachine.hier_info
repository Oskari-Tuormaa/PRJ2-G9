|kodelaes_sm_p_a
CLOCK_50 => kodelaes_sm:U1.clk
KEY[2] => kodelaes_sm:U1.reset
KEY[3] => kodelaes_sm:U1.enter
SW[0] => kodelaes_sm:U1.code[0]
SW[1] => kodelaes_sm:U1.code[1]
SW[2] => kodelaes_sm:U1.code[2]
SW[3] => kodelaes_sm:U1.code[3]
GPIO_0[0] <= kodelaes_sm:U1.lock
LEDG[0] <= kodelaes_sm:U1.aaben
LEDR[0] <= kodelaes_sm:U1.LED[0]
LEDR[1] <= kodelaes_sm:U1.LED[1]
LEDR[2] <= kodelaes_sm:U1.LED[2]
LEDR[3] <= kodelaes_sm:U1.LED[3]
LEDR[4] <= kodelaes_sm:U1.LED[4]
LEDR[5] <= kodelaes_sm:U1.LED[5]


|kodelaes_sm_p_a|kodelaes_sm:U1
reset => present_state2[0].ACLR
reset => present_state2[1].ACLR
reset => present_state~3.DATAIN
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => err_event.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => err_event.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
enter => next_state.OUTPUTSELECT
clk => switch.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => counter[9].CLK
clk => counter[10].CLK
clk => counter[11].CLK
clk => counter[12].CLK
clk => counter[13].CLK
clk => counter[14].CLK
clk => counter[15].CLK
clk => counter[16].CLK
clk => counter[17].CLK
clk => counter[18].CLK
clk => counter[19].CLK
clk => counter[20].CLK
clk => counter[21].CLK
clk => counter[22].CLK
clk => counter[23].CLK
clk => counter[24].CLK
clk => counter[25].CLK
clk => counter[26].CLK
clk => counter[27].CLK
clk => counter[28].CLK
clk => counter[29].CLK
clk => counter[30].CLK
clk => counter[31].CLK
clk => present_state2[0].CLK
clk => present_state2[1].CLK
clk => present_state~1.DATAIN
code[0] => Equal0.IN3
code[0] => Equal1.IN1
code[1] => Equal0.IN1
code[1] => Equal1.IN3
code[2] => Equal0.IN2
code[2] => Equal1.IN0
code[3] => Equal0.IN0
code[3] => Equal1.IN2
lock <= lock.DB_MAX_OUTPUT_PORT_TYPE
err_event <= Selector14.DB_MAX_OUTPUT_PORT_TYPE
failed <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
aaben <= aaben.DB_MAX_OUTPUT_PORT_TYPE
LED[0] <= WideOr4.DB_MAX_OUTPUT_PORT_TYPE
LED[1] <= WideOr3.DB_MAX_OUTPUT_PORT_TYPE
LED[2] <= WideOr2.DB_MAX_OUTPUT_PORT_TYPE
LED[3] <= WideOr1.DB_MAX_OUTPUT_PORT_TYPE
LED[4] <= WideOr0.DB_MAX_OUTPUT_PORT_TYPE
LED[5] <= LED[5].DB_MAX_OUTPUT_PORT_TYPE



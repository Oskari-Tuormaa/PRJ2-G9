
ArduinoUARTTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  000002be  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000026a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000002be  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002f0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000068  00000000  00000000  00000330  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000f4d  00000000  00000000  00000398  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000d27  00000000  00000000  000012e5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000420  00000000  00000000  0000200c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000c8  00000000  00000000  0000242c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000683  00000000  00000000  000024f4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000218  00000000  00000000  00002b77  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00002d8f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	02 d0       	rcall	.+4      	; 0xfa <main>
  f6:	b7 c0       	rjmp	.+366    	; 0x266 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <main>:
#include "uart.h"


int main(void)
{
	DDRB = 0xFF;
  fa:	8f ef       	ldi	r24, 0xFF	; 255
  fc:	84 b9       	out	0x04, r24	; 4
	
	InitUART(9600, 8, 'N');
  fe:	2e e4       	ldi	r18, 0x4E	; 78
 100:	48 e0       	ldi	r20, 0x08	; 8
 102:	60 e8       	ldi	r22, 0x80	; 128
 104:	75 e2       	ldi	r23, 0x25	; 37
 106:	80 e0       	ldi	r24, 0x00	; 0
 108:	90 e0       	ldi	r25, 0x00	; 0
 10a:	0b d0       	rcall	.+22     	; 0x122 <_Z8InitUARTmhc>
	
    /* Replace with your application code */
    while (1) 
    {
		char command = ReadChar();
 10c:	cf ef       	ldi	r28, 0xFF	; 255
 10e:	86 d0       	rcall	.+268    	; 0x21c <_Z8ReadCharv>
		
		switch(command)
 110:	80 33       	cpi	r24, 0x30	; 48
 112:	19 f0       	breq	.+6      	; 0x11a <main+0x20>
 114:	81 33       	cpi	r24, 0x31	; 49
 116:	19 f0       	breq	.+6      	; 0x11e <main+0x24>
 118:	fa cf       	rjmp	.-12     	; 0x10e <main+0x14>
		{
		case '0':
			PORTB = 0xFF;
 11a:	c5 b9       	out	0x05, r28	; 5
			break;
 11c:	f8 cf       	rjmp	.-16     	; 0x10e <main+0x14>
		case '1':
			PORTB = 0x00;
 11e:	15 b8       	out	0x05, r1	; 5
			break;
 120:	f6 cf       	rjmp	.-20     	; 0x10e <main+0x14>

00000122 <_Z8InitUARTmhc>:
Returns value <> 0 (TRUE), if the UART HAS received a new character.
*************************************************************************/
unsigned char CharReady()
{
   return UCSR0A & (1<<7);
}
 122:	0f 93       	push	r16
 124:	1f 93       	push	r17
 126:	cf 93       	push	r28
 128:	df 93       	push	r29
 12a:	c4 2f       	mov	r28, r20
 12c:	d2 2f       	mov	r29, r18
 12e:	8b 01       	movw	r16, r22
 130:	9c 01       	movw	r18, r24
 132:	0c 52       	subi	r16, 0x2C	; 44
 134:	11 40       	sbci	r17, 0x01	; 1
 136:	21 09       	sbc	r18, r1
 138:	31 09       	sbc	r19, r1
 13a:	05 3d       	cpi	r16, 0xD5	; 213
 13c:	10 4c       	sbci	r17, 0xC0	; 192
 13e:	21 40       	sbci	r18, 0x01	; 1
 140:	31 05       	cpc	r19, r1
 142:	08 f0       	brcs	.+2      	; 0x146 <_Z8InitUARTmhc+0x24>
 144:	66 c0       	rjmp	.+204    	; 0x212 <_Z8InitUARTmhc+0xf0>
 146:	2b ef       	ldi	r18, 0xFB	; 251
 148:	2c 0f       	add	r18, r28
 14a:	24 30       	cpi	r18, 0x04	; 4
 14c:	08 f0       	brcs	.+2      	; 0x150 <_Z8InitUARTmhc+0x2e>
 14e:	61 c0       	rjmp	.+194    	; 0x212 <_Z8InitUARTmhc+0xf0>
 150:	e0 ec       	ldi	r30, 0xC0	; 192
 152:	f0 e0       	ldi	r31, 0x00	; 0
 154:	20 81       	ld	r18, Z
 156:	2c 7f       	andi	r18, 0xFC	; 252
 158:	20 83       	st	Z, r18
 15a:	28 e1       	ldi	r18, 0x18	; 24
 15c:	20 93 c1 00 	sts	0x00C1, r18	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
 160:	e2 ec       	ldi	r30, 0xC2	; 194
 162:	f0 e0       	ldi	r31, 0x00	; 0
 164:	20 81       	ld	r18, Z
 166:	10 82       	st	Z, r1
 168:	dc 01       	movw	r26, r24
 16a:	cb 01       	movw	r24, r22
 16c:	88 0f       	add	r24, r24
 16e:	99 1f       	adc	r25, r25
 170:	aa 1f       	adc	r26, r26
 172:	bb 1f       	adc	r27, r27
 174:	88 0f       	add	r24, r24
 176:	99 1f       	adc	r25, r25
 178:	aa 1f       	adc	r26, r26
 17a:	bb 1f       	adc	r27, r27
 17c:	9c 01       	movw	r18, r24
 17e:	ad 01       	movw	r20, r26
 180:	22 0f       	add	r18, r18
 182:	33 1f       	adc	r19, r19
 184:	44 1f       	adc	r20, r20
 186:	55 1f       	adc	r21, r21
 188:	22 0f       	add	r18, r18
 18a:	33 1f       	adc	r19, r19
 18c:	44 1f       	adc	r20, r20
 18e:	55 1f       	adc	r21, r21
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	74 e2       	ldi	r23, 0x24	; 36
 194:	84 ef       	ldi	r24, 0xF4	; 244
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	44 d0       	rcall	.+136    	; 0x222 <__udivmodsi4>
 19a:	21 50       	subi	r18, 0x01	; 1
 19c:	31 09       	sbc	r19, r1
 19e:	30 93 c5 00 	sts	0x00C5, r19	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
 1a2:	20 93 c4 00 	sts	0x00C4, r18	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
 1a6:	c6 30       	cpi	r28, 0x06	; 6
 1a8:	71 f0       	breq	.+28     	; 0x1c6 <_Z8InitUARTmhc+0xa4>
 1aa:	18 f4       	brcc	.+6      	; 0x1b2 <_Z8InitUARTmhc+0x90>
 1ac:	c5 30       	cpi	r28, 0x05	; 5
 1ae:	31 f0       	breq	.+12     	; 0x1bc <_Z8InitUARTmhc+0x9a>
 1b0:	1b c0       	rjmp	.+54     	; 0x1e8 <_Z8InitUARTmhc+0xc6>
 1b2:	c7 30       	cpi	r28, 0x07	; 7
 1b4:	71 f0       	breq	.+28     	; 0x1d2 <_Z8InitUARTmhc+0xb0>
 1b6:	c8 30       	cpi	r28, 0x08	; 8
 1b8:	91 f0       	breq	.+36     	; 0x1de <_Z8InitUARTmhc+0xbc>
 1ba:	16 c0       	rjmp	.+44     	; 0x1e8 <_Z8InitUARTmhc+0xc6>
 1bc:	e2 ec       	ldi	r30, 0xC2	; 194
 1be:	f0 e0       	ldi	r31, 0x00	; 0
 1c0:	80 81       	ld	r24, Z
 1c2:	80 83       	st	Z, r24
 1c4:	11 c0       	rjmp	.+34     	; 0x1e8 <_Z8InitUARTmhc+0xc6>
 1c6:	e2 ec       	ldi	r30, 0xC2	; 194
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	80 81       	ld	r24, Z
 1cc:	82 60       	ori	r24, 0x02	; 2
 1ce:	80 83       	st	Z, r24
 1d0:	0b c0       	rjmp	.+22     	; 0x1e8 <_Z8InitUARTmhc+0xc6>
 1d2:	e2 ec       	ldi	r30, 0xC2	; 194
 1d4:	f0 e0       	ldi	r31, 0x00	; 0
 1d6:	80 81       	ld	r24, Z
 1d8:	84 60       	ori	r24, 0x04	; 4
 1da:	80 83       	st	Z, r24
 1dc:	05 c0       	rjmp	.+10     	; 0x1e8 <_Z8InitUARTmhc+0xc6>
 1de:	e2 ec       	ldi	r30, 0xC2	; 194
 1e0:	f0 e0       	ldi	r31, 0x00	; 0
 1e2:	80 81       	ld	r24, Z
 1e4:	86 60       	ori	r24, 0x06	; 6
 1e6:	80 83       	st	Z, r24
 1e8:	d5 34       	cpi	r29, 0x45	; 69
 1ea:	19 f0       	breq	.+6      	; 0x1f2 <_Z8InitUARTmhc+0xd0>
 1ec:	df 34       	cpi	r29, 0x4F	; 79
 1ee:	39 f0       	breq	.+14     	; 0x1fe <_Z8InitUARTmhc+0xdc>
 1f0:	0c c0       	rjmp	.+24     	; 0x20a <_Z8InitUARTmhc+0xe8>
 1f2:	e2 ec       	ldi	r30, 0xC2	; 194
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	80 62       	ori	r24, 0x20	; 32
 1fa:	80 83       	st	Z, r24
 1fc:	0a c0       	rjmp	.+20     	; 0x212 <_Z8InitUARTmhc+0xf0>
 1fe:	e2 ec       	ldi	r30, 0xC2	; 194
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	80 81       	ld	r24, Z
 204:	80 63       	ori	r24, 0x30	; 48
 206:	80 83       	st	Z, r24
 208:	04 c0       	rjmp	.+8      	; 0x212 <_Z8InitUARTmhc+0xf0>
 20a:	e2 ec       	ldi	r30, 0xC2	; 194
 20c:	f0 e0       	ldi	r31, 0x00	; 0
 20e:	80 81       	ld	r24, Z
 210:	80 83       	st	Z, r24
 212:	df 91       	pop	r29
 214:	cf 91       	pop	r28
 216:	1f 91       	pop	r17
 218:	0f 91       	pop	r16
 21a:	08 95       	ret

0000021c <_Z8ReadCharv>:
{
   while(!CharReady)
   {
	   continue;
   }
   return UDR0;
 21c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
}
 220:	08 95       	ret

00000222 <__udivmodsi4>:
 222:	a1 e2       	ldi	r26, 0x21	; 33
 224:	1a 2e       	mov	r1, r26
 226:	aa 1b       	sub	r26, r26
 228:	bb 1b       	sub	r27, r27
 22a:	fd 01       	movw	r30, r26
 22c:	0d c0       	rjmp	.+26     	; 0x248 <__udivmodsi4_ep>

0000022e <__udivmodsi4_loop>:
 22e:	aa 1f       	adc	r26, r26
 230:	bb 1f       	adc	r27, r27
 232:	ee 1f       	adc	r30, r30
 234:	ff 1f       	adc	r31, r31
 236:	a2 17       	cp	r26, r18
 238:	b3 07       	cpc	r27, r19
 23a:	e4 07       	cpc	r30, r20
 23c:	f5 07       	cpc	r31, r21
 23e:	20 f0       	brcs	.+8      	; 0x248 <__udivmodsi4_ep>
 240:	a2 1b       	sub	r26, r18
 242:	b3 0b       	sbc	r27, r19
 244:	e4 0b       	sbc	r30, r20
 246:	f5 0b       	sbc	r31, r21

00000248 <__udivmodsi4_ep>:
 248:	66 1f       	adc	r22, r22
 24a:	77 1f       	adc	r23, r23
 24c:	88 1f       	adc	r24, r24
 24e:	99 1f       	adc	r25, r25
 250:	1a 94       	dec	r1
 252:	69 f7       	brne	.-38     	; 0x22e <__udivmodsi4_loop>
 254:	60 95       	com	r22
 256:	70 95       	com	r23
 258:	80 95       	com	r24
 25a:	90 95       	com	r25
 25c:	9b 01       	movw	r18, r22
 25e:	ac 01       	movw	r20, r24
 260:	bd 01       	movw	r22, r26
 262:	cf 01       	movw	r24, r30
 264:	08 95       	ret

00000266 <_exit>:
 266:	f8 94       	cli

00000268 <__stop_program>:
 268:	ff cf       	rjmp	.-2      	; 0x268 <__stop_program>
